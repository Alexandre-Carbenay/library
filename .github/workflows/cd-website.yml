name: Continuous Delivery pipeline for Library Website
on:
  push:
    branches:
      - 'main'
    paths:
      - 'website/**'
      - '.github/workflows/cd-website.yml'
      - '!**/README.md'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - 'main'
    paths:
      - 'website/**'
      - '.github/workflows/cd-website.yml'
      - '!**/README.md'
  workflow_dispatch:

jobs:
  build:
    runs-on: [ubuntu-latest]
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - name: Hadolint Dockerfile Scan
        uses: hadolint/hadolint-action@v3.1.0
        id: hadolint
        continue-on-error: true
        with:
          dockerfile: website/Dockerfile
          verbose: true
          failure-threshold: info

      - name: Comment pull request with Hadolint results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const output = `
            #### Hadolint: \`${{ steps.hadolint.outcome }}\`
            \`\`\`
            ${process.env.HADOLINT_RESULTS}
            \`\`\`
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Extract branch name
        id: branch_name
        shell: bash
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Extract application version
        id: app_version
        working-directory: ./website
        run: |
          version=$(./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Build with Gradle
        working-directory: ./website
        run: make clean && VERSION=${{ env.VERSION }} REVISION=${{ env.REVISION }} make
        timeout-minutes: 5
        env:
          VERSION: ${{ steps.app_version.outputs.version }}
          REVISION: ${{ steps.branch_name.outputs.branch }}-${{ github.run_number }}

      - name: Check for Pacts changes to commit
        id: check-pacts
        working-directory: ./website
        run: |
          if git status --porcelain; then
            echo "PACTS_CHANGED=true" >> $GITHUB_OUTPUT
          else
            echo "PACTS_CHANGED=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push Pacts
        if: ${{ steps.check-pacts.outputs.PACTS_CHANGED == 'true' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'doc: Update library website pacts [skip actions]'

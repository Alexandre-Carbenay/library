openapi: 3.0.3
info:
  title: Library Catalog
  description: Provides an API to access the catalog of a library.
  contact:
    email: acarbenay@adhuc.fr
  version: 1.0.0
servers:
  - url: https://catalog.library.adhuc.org/api
tags:
  - name: Books
    description: Access the books and their editions in the catalog of the library.
  - name: Authors
    description: Access the authors of the books in the catalog of the library.
paths:
  /v1/catalog:
    get:
      tags:
        - Books
      summary: Gets a paginated list of books based on filters.
      description: The catalog can be sorted and filtered in many different ways.
      operationId: getCatalog
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '206':
          $ref: '#/components/responses/Catalog'
        '400':
          $ref: '#/components/responses/InvalidPaginationParameters'
        '500':
          $ref: '#/components/responses/GeneralError'
  /v1/books/{id}:
    get:
      tags:
        - Books
      summary: Gets the details of a book based on its identity.
      description: |
        A book corresponds to the work of an author or a group of authors,
        resulting in the publication of a first edition. It can later be published
        by other editors, or re-edited in different formats. A book can also be
        translated and published in different languages.
        
        The details of a book contain all its localized information and the
        relation to its authors and editions.
        
        Localization depends on the `Accept-Language` header. If none is provided,
        or the language does not correspond to any available for the book, a
        default one is provided.
      operationId: getBook
      parameters:
        - $ref: '#/components/parameters/BookId'
        - $ref: '#/components/parameters/AcceptLanguage'
      responses:
        '200':
          $ref: '#/components/responses/BookDetails'
        '400':
          $ref: '#/components/responses/InvalidBookId'
        '404':
          $ref: '#/components/responses/UnknownBook'
        '500':
          $ref: '#/components/responses/GeneralError'
  /v1/editions/{isbn}:
    get:
      tags:
        - Books
      summary: Gets the details of a book edition based on its ISBN.
      description: |
        An edition corresponds to a book's publication in a given language and format,
        resulting in a different ISBN for each edition.

        The details of an edition contain all its information and the relation to
        its book's authors.
      operationId: getEdition
      parameters:
        - $ref: '#/components/parameters/ISBN'
      responses:
        '200':
          $ref: '#/components/responses/EditionDetails'
        '400':
          $ref: '#/components/responses/InvalidEditionISBN'
        '404':
          $ref: '#/components/responses/UnknownEdition'
        '500':
          $ref: '#/components/responses/GeneralError'
  /v1/authors/{id}:
    get:
      tags:
        - Authors
      summary: Gets the details of an author based on its identity.
      description: |
        The details of an author contain all its information and the relation to
        its written books.
      operationId: getAuthor
      parameters:
        - $ref: '#/components/parameters/AuthorId'
      responses:
        '200':
          $ref: '#/components/responses/AuthorDetails'
        '400':
          $ref: '#/components/responses/InvalidAuthorId'
        '404':
          $ref: '#/components/responses/UnknownAuthor'
        '500':
          $ref: '#/components/responses/GeneralError'
components:
  parameters:
    BookId:
      name: id
      description: Book identity.
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: b6608a30-1e9b-4ae0-a89d-624c3ca85da4
    ISBN:
      name: isbn
      description: Book edition ISBN.
      in: path
      required: true
      schema:
        type: string
        format: isbn
        example: 9782081275232
    AuthorId:
      name: id
      description: Author identity.
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 99287cef-2c8c-4a4d-a82e-f1a8452dcfe2
    Page:
      name: page
      description: |
        Page number to retrieve from the collection, starting from 0. This
        parameter must be used in combination with the *size* parameter to
        specify the number of elements in a page.
      in: query
      required: false
      schema:
        type: number
        minimum: 0
        default: 0
        example: 2
    PageSize:
      name: size
      description: |
        Size of the page to retrieve from the collection. This parameter must be
        used in combination with the *page* parameter to specify the current page.
      in: query
      required: false
      schema:
        type: number
        minimum: 1
        default: 50
        example: 50
    AcceptLanguage:
      name: Accept-Language
      description: |
        Indicates the expected language(s) for localized resources. If none of the
        accept languages is provided or available, a default one is provided.

        Accept languages can be wildcarded or weighted with the quality value syntax:

        `Accept-Language: fr-CH, fr;q=0.9, en;q=0.8, de;q=0.7, *;q=0.5`

        See [documentation](https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Accept-Language)
        for more information about this header.
      in: header
      required: false
      schema:
        type: string
        example: fr
  responses:
    Catalog:
      description: Books returned from catalog.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Catalog'
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Catalog'
    BookDetails:
      description: A book details.
      headers:
        Content-Language:
          $ref: '#/components/headers/ContentLanguage'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BookDetails'
        application/hal+json:
          schema:
            $ref: '#/components/schemas/BookDetails'
    InvalidBookId:
      description: Invalid book ID.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            invalidId:
              $ref: '#/components/examples/InvalidUUIDId'
    UnknownBook:
      description: No book corresponds to the specified identity.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            unknown:
              $ref: '#/components/examples/UnknownBook'
    EditionDetails:
      description: A book edition details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EditionDetails'
        application/hal+json:
          schema:
            $ref: '#/components/schemas/EditionDetails'
    InvalidEditionISBN:
      description: Invalid edition ISBN.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            invalidId:
              $ref: '#/components/examples/InvalidISBN'
    UnknownEdition:
      description: No edition corresponds to the specified identity.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            unknown:
              $ref: '#/components/examples/UnknownEdition'
    AuthorDetails:
      description: An author details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorDetails'
        application/hal+json:
          schema:
            $ref: '#/components/schemas/AuthorDetails'
    InvalidAuthorId:
      description: Invalid author ID.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            invalidId:
              $ref: '#/components/examples/InvalidUUIDId'
    UnknownAuthor:
      description: No author corresponds to the specified identity.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            unknown:
              $ref: '#/components/examples/UnknownAuthor'
    InvalidPaginationParameters:
      description: Invalid pagination parameters.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            pageNumber:
              $ref: '#/components/examples/InvalidPageNumber'
            pageSize:
              $ref: '#/components/examples/InvalidPageSize'
    GeneralError:
      description: General unexpected error.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
  headers:
    ContentLanguage:
      schema:
        type: string
      description: |
        The language of the localized resource, ideally corresponding to one of
        those provided in the `Accept-Language` header.

        See [documentation](https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Content-Language)
        for more information about this header.
  schemas:
    Catalog:
      type: object
      required:
        - page
        - '_links'
      properties:
        page:
          $ref: '#/components/schemas/Page'
        '_embedded':
          type: object
          readOnly: true
          required:
            - books
            - authors
          properties:
            books:
              description: |
                The books collection, containing basic information for each book.
              type: array
              items:
                $ref: '#/components/schemas/Book'
            editions:
              description: |
                The book editions corresponding to the books in the collection,
                containing basic information for each edition.

                This field is deprecated and will be replaced by the books and
                their editions.
              type: array
              items:
                $ref: '#/components/schemas/Edition'
              deprecated: true
            authors:
              description: The authors related to the editions in the collection.
              type: array
              items:
                $ref: '#/components/schemas/Author'
        '_links':
          type: object
          readOnly: true
          required:
            - self
          properties:
            self:
              description: Link to this catalog page.
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://catalog.library.adhuc.org/api/v1/catalog?page=2&size=50'
            template:
              description: Link to the template of catalog page.
              type: object
              required:
                - href
                - templated
              properties:
                href:
                  type: string
                  example: 'https://catalog.library.adhuc.org/api/v1/catalog{?page,size}'
                templated:
                  type: boolean
                  enum:
                    - true
            prev:
              description: Link to the previous catalog page.
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://catalog.library.adhuc.org/api/v1/catalog?page=1&size=50'
            next:
              description: Link to the next catalog page.
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://catalog.library.adhuc.org/api/v1/catalog?page=3&size=50'
            first:
              description: Link to the first catalog page.
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://catalog.library.adhuc.org/api/v1/catalog?page=0&size=50'
            last:
              description: Link to the last catalog page.
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://catalog.library.adhuc.org/api/v1/catalog?page=8&size=50'
    Book:
      type: object
      required:
        - id
        - authors
        - title
        - description
        - '_links'
      properties:
        id:
          $ref: '#/components/schemas/BookId'
        authors:
          $ref: '#/components/schemas/BookAuthors'
        title:
          $ref: '#/components/schemas/BookTitle'
        description:
          $ref: '#/components/schemas/BookDescription'
        '_links':
          type: object
          readOnly: true
          required:
            - self
          properties:
            self:
              $ref: '#/components/schemas/BookLink'
            wikipedia:
              $ref: '#/components/schemas/WikipediaLink'
    BookDetails:
      type: object
      required:
        - id
        - title
        - description
        - '_links'
        - '_embedded'
      properties:
        id:
          $ref: '#/components/schemas/BookId'
        title:
          $ref: '#/components/schemas/BookTitle'
        description:
          $ref: '#/components/schemas/BookDescription'
        '_links':
          type: object
          readOnly: true
          required:
            - self
          properties:
            self:
              $ref: '#/components/schemas/BookLink'
            wikipedia:
              $ref: '#/components/schemas/WikipediaLink'
        '_embedded':
          type: object
          readOnly: true
          required:
            - authors
          properties:
            authors:
              description: The authors related to the book.
              type: array
              items:
                $ref: '#/components/schemas/Author'
            editions:
              description: The editions corresponding to the book.
              type: array
              items:
                $ref: '#/components/schemas/Edition'
    BookId:
      type: string
      format: uuid
      example: b6608a30-1e9b-4ae0-a89d-624c3ca85da4
    BookTitle:
      type: string
      description: |
        The title of the book, in the expected language, or a default language if
        the expected is not available.
      example: Du contrat social
    BookDescription:
      type: string
      description: |
        A general description of the book, in the expected language, or a default
        language if the expected one is not available.
      example: >
        Du contrat social est un traité de philosophie politique présentant
        comment l’homme, passant de l’état de nature à l’état de société, peut
        instituer un ordre social au service de l'intérêt commun. Le pacte social
        que propose Rousseau établit que chacun doit renoncer à tous ses droits
        particuliers ou du plus fort pour obtenir l'égalité des droits que procure
        la société. Cette aliénation de chaque sujet de l’État est ce pacte qui
        offre à chacun l’égalité : « Les clauses [du pacte social] se réduisent
        toutes à une seule : l’aliénation totale de chaque associé avec tous ses
        droits à toute la communauté : car premièrement, chacun se donnant tout
        entier, la condition est égale pour tous ; et la condition étant égale
        pour tous, nul n’a intérêt de la rendre onéreuse aux autres. » (Livre I,
        Chapitre 6) La légitimité du pacte social repose sur le fait que l’homme
        n’aliène pas au sens propre (il ne l'échange pas ni ne le donne) son
        droit naturel mais il comprend que le pacte social est au contraire la
        condition de l’existence de ses droits naturels.
    BookLink:
      type: object
      description: Link to the book. Can be used to see the details of the book.
      required:
        - href
      properties:
        href:
          type: string
          example: 'https://catalog.library.adhuc.org/api/v1/books/b6608a30-1e9b-4ae0-a89d-624c3ca85da4'
    WikipediaLink:
      type: object
      description: Link to the wikipedia page of the book.
      required:
        - href
      properties:
        href:
          type: string
          example: 'https://fr.wikipedia.org/wiki/Du_contrat_social'
    BookAuthors:
      type: array
      items:
        $ref: '#/components/schemas/AuthorId'
    Edition:
      type: object
      required:
        - isbn
        - title
        - language
        - summary
        - '_links'
      properties:
        isbn:
          $ref: '#/components/schemas/ISBN'
        title:
          $ref: '#/components/schemas/Title'
        language:
          $ref: '#/components/schemas/Language'
        summary:
          $ref: '#/components/schemas/Summary'
        '_links':
          type: object
          readOnly: true
          required:
            - self
            - book
          properties:
            self:
              $ref: '#/components/schemas/EditionLink'
            book:
              $ref: '#/components/schemas/BookLink'
    EditionDetails:
      type: object
      required:
        - isbn
        - title
        - publication_date
        - language
        - summary
        - '_links'
      properties:
        isbn:
          $ref: '#/components/schemas/ISBN'
        title:
          $ref: '#/components/schemas/Title'
        publication_date:
          $ref: '#/components/schemas/PublicationDate'
        language:
          $ref: '#/components/schemas/Language'
        summary:
          $ref: '#/components/schemas/Summary'
        '_links':
          type: object
          readOnly: true
          required:
            - self
            - book
          properties:
            self:
              $ref: '#/components/schemas/EditionLink'
            book:
              $ref: '#/components/schemas/BookLink'
        '_embedded':
          type: object
          readOnly: true
          required:
            - authors
          properties:
            authors:
              description: The authors related to the book.
              type: array
              items:
                $ref: '#/components/schemas/Author'
    ISBN:
      type: string
      format: isbn
      example: 9782081275232
    Title:
      type: string
      description: The title of the book for the edition.
      example: Du contrat social
    PublicationDate:
      type: string
      description: |
        The publication date can be either an exact date, in 'yyy-MM-dd' format,
        or a year, either negative (BC) or positive (AD).
      example: 1762
    Summary:
      type: string
      description: The summary of the book as provided by the editor.
      example: >
        Paru en 1762, le Contrat social, en affirmant le principe de souveraineté du peuple,
        a constitué un tournant décisif pour la modernité et s'est imposé comme un des textes
        majeurs de la philosophie politique. Il a aussi acquis le statut de monument, plus
        célèbre que connu, plus révéré - ou honni - qu'interrogé. Retrouver, dans les formules
        fameuses et les pages d'anthologie, le mouvement de la réflexion et les questions vives
        qui nourrissent une œuvre beaucoup plus problématique qu'affirmative, c'est découvrir
        une pensée qui se tient au plus près des préoccupations d'aujourd'hui : comment intégrer
        les intérêts de tous dans la détermination de l'intérêt commun ? Comment lutter contre
        la pente de tout gouvernement à déposséder les citoyens de la souveraineté ? Comment
        former en chacun ce sentiment d'obligation sans lequel le lien social se défait ?
    EditionLink:
      type: object
      description: Link to the edition. Can be used to see the details of the edition.
      required:
        - href
      properties:
        href:
          type: string
          example: 'https://catalog.library.adhuc.org/api/v1/editions/9782081275232'
    Author:
      type: object
      required:
        - id
        - name
        - '_links'
      properties:
        id:
          $ref: '#/components/schemas/AuthorId'
        name:
          $ref: '#/components/schemas/AuthorName'
        '_links':
          type: object
          readOnly: true
          required:
            - self
          properties:
            self:
              $ref: '#/components/schemas/AuthorLink'
    AuthorDetails:
      type: object
      required:
        - id
        - name
        - date_of_birth
        - '_links'
      properties:
        id:
          $ref: '#/components/schemas/AuthorId'
        name:
          $ref: '#/components/schemas/AuthorName'
        date_of_birth:
          $ref: '#/components/schemas/DateOfBirth'
        date_of_death:
          $ref: '#/components/schemas/DateOfDeath'
        '_links':
          type: object
          readOnly: true
          required:
            - self
          properties:
            self:
              $ref: '#/components/schemas/AuthorLink'
        '_embedded':
          type: object
          readOnly: true
          required:
            - notable_books
          properties:
            notable_books:
              description: The author's editions, containing basic information for each book.
              type: array
              items:
                $ref: '#/components/schemas/Edition'
    AuthorId:
      type: string
      format: uuid
      example: 99287cef-2c8c-4a4d-a82e-f1a8452dcfe2
    AuthorLink:
      type: object
      description: Link to the author. Can be used to see the detail of the author.
      required:
        - href
      properties:
        href:
          type: string
          example: 'https://catalog.library.adhuc.org/api/v1/authors/99287cef-2c8c-4a4d-a82e-f1a8452dcfe2'
    AuthorName:
      type: string
      example: Jean-Jacques Rousseau
    DateOfBirth:
      type: string
      format: date
      example: 1712-06-28
    DateOfDeath:
      type: string
      format: date
      example: 1778-07-02
    Language:
      type: string
      example: French
    Page:
      type: object
      readOnly: true
      required:
        - size
        - total_elements
        - total_pages
        - number
      properties:
        size:
          description: The requested page size. The number of elements in the current page is between 0 and this size.
          type: number
          example: 50
          minimum: 0
        total_elements:
          description: The number of elements in all pages.
          type: number
          example: 443
          minimum: 0
        total_pages:
          description: The number of pages containing all the elements.
          type: number
          example: 9
          minimum: 0
        number:
          description: The current page, starting at 0.
          type: number
          example: 2
          minimum: 0
    Problem:
      type: object
      required:
        - type
        - status
        - title
        - detail
      properties:
        type:
          type: string
          format: uri-reference
          description: The problem type.
        status:
          type: integer
          description: The HTTP status of the response.
        title:
          type: string
          description: A human-readable summary of the problem type.
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        errors:
          type: array
          description: An extension to the problem, providing information about each error.
          items:
            oneOf:
              - type: object
                required:
                  - detail
                  - pointer
                properties:
                  detail:
                    type: string
                    description: The error detail used to determine why the server returned an error.
                  pointer:
                    type: string
                    description: |
                      A JSON pointer (https://datatracker.ietf.org/doc/html/rfc6901) to the associated entity in the request
                      document (e.g. "/" for a primary object, "/name" for a specific attribute named "name").
              - type: object
                required:
                  - detail
                  - parameter
                properties:
                  detail:
                    type: string
                    description: The error detail used to determine why the server returned an error.
                  parameter:
                    type: string
                    description: A string indicating which URI query parameter caused the error.
  examples:
    InvalidPageNumber:
      value:
        type: /problems/invalid-request
        status: 400
        title: Request validation error
        detail: Invalid page number
        errors:
          - detail: 'Numeric instance is lower than the required minimum (minimum: 0, found: -1)'
            parameter: page
      summary: Invalid page number.
    InvalidPageSize:
      value:
        type: /problems/invalid-request
        status: 400
        title: Request validation error
        detail: Invalid page size
        errors:
          - detail: 'Numeric instance is lower than the required minimum (minimum: 1, found: 0)'
            parameter: size
      summary: Invalid page size.
    InvalidUUIDId:
      value:
        type: /problems/invalid-request
        status: 400
        title: Request validation error
        detail: Invalid UUID id
        errors:
          - detail: 'Input string "1234" is not a valid UUID'
            parameter: id
      summary: Invalid UUID passed as id in the path.
    InvalidISBN:
      value:
        type: /problems/invalid-request
        status: 400
        title: Request validation error
        detail: Invalid ISBN
        errors:
          - detail: 'Input string "1234" is not a valid ISBN'
            parameter: isbn
      summary: Invalid UUID passed as id in the path.
    UnknownBook:
      value:
        type: /problems/unknown-entity
        status: 404
        title: Unknown book
        detail: No book exists with id 'b94329cb-8767-4438-b802-d85a268fb3e3'
      summary: Error when no book corresponds to the specified identity.
    UnknownEdition:
      value:
        type: /problems/unknown-entity
        status: 404
        title: Unknown edition
        detail: No edition exists with ISBN '9782081275232'
      summary: Error when no edition corresponds to the specified ISBN.
    UnknownAuthor:
      value:
        type: /problems/unknown-entity
        status: 404
        title: Unknown author
        detail: No author exists with id '96c7774f-dd6b-43d4-bd0e-6a7d1aad09a4'
      summary: Error when no author corresponds to the specified identity.

openapi: 3.0.3
info:
  title: Library Referencing
  description: Provides an API to reference authors, books and editions.
  contact:
    email: acarbenay@adhuc.fr
  version: 1.0.0
servers:
  - url: https://localhost:8080/api
    description: Local environment
  - url: https://referencing.library.adhuc.org/api
    description: Production environment (coming soon)
tags:
  - name: Authors
    description: Manage referencing of authors within the library.
paths:
  /v1/authors:
    get:
      tags:
        - Authors
      summary: Gets a paginated list of authors based on filters.
      description: |
        The authors list can be sorted and filtered in many different ways.
      operationId: getAuthors
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '206':
          $ref: '#/components/responses/Authors'
        '400':
          $ref: '#/components/responses/InvalidAuthorsParameters'
        '500':
          $ref: '#/components/responses/GeneralError'
    post:
      tags:
        - Authors
      summary: References a new author.
      description: |
        References an author to be able to reference books and editions.
      operationId: referenceAuthor
      requestBody:
        $ref: '#/components/requestBodies/ReferenceAuthor'
      responses:
        '201':
          $ref: '#/components/responses/ReferencedAuthor'
        '400':
          $ref: '#/components/responses/InvalidAuthorReferencing'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/GeneralError'
  /v1/authors/{id}:
    get:
      tags:
        - Authors
      summary: Gets the details of an author based on its identity.
      description: |
        The details of an author contain all its information.
      operationId: getAuthor
      parameters:
        - $ref: '#/components/parameters/AuthorId'
      responses:
        '200':
          $ref: '#/components/responses/Author'
        '400':
          $ref: '#/components/responses/InvalidAuthorId'
        '404':
          $ref: '#/components/responses/UnknownAuthor'
        '500':
          $ref: '#/components/responses/GeneralError'
components:
  parameters:
    AuthorId:
      name: id
      description: Author identity.
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 83b5bf5d-b8bc-4ea7-82dd-51d7bd1af725
    Page:
      name: page
      description: |
        Page number to retrieve from the collection, starting from 0. This
        parameter must be used in combination with the *size* parameter to
        specify the number of elements in a page.
      in: query
      required: false
      schema:
        type: number
        minimum: 0
        default: 0
        example: 1
    PageSize:
      name: size
      description: |
        Size of the page to retrieve from the collection. This parameter must be
        used in combination with the *page* parameter to specify the current page.
      in: query
      required: false
      schema:
        type: number
        minimum: 1
        default: 50
        example: 50
  requestBodies:
    ReferenceAuthor:
      required: true
      description: A command to reference an author.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReferenceAuthor'
        application/hal+json:
          schema:
            $ref: '#/components/schemas/ReferenceAuthor'
  responses:
    Authors:
      description: The referenced authors.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Authors'
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Authors'
    ReferencedAuthor:
      description: The referenced author.
      headers:
        Location:
          description: Link the referenced author.
          schema:
            type: string
            example: 'https://referencing.library.adhuc.org/api/v1/authors/83b5bf5d-b8bc-4ea7-82dd-51d7bd1af725'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Author'
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Author'
    InvalidAuthorReferencing:
      description: Invalid author referencing command.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            invalidAuthorReferencing:
              $ref: '#/components/examples/InvalidAuthorReferencing'
    InvalidAuthorsParameters:
      description: Invalid pagination parameters.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            pageNumber:
              $ref: '#/components/examples/InvalidPageNumber'
            pageSize:
              $ref: '#/components/examples/InvalidPageSize'
    Author:
      description: A referenced author.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Author'
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Author'
    InvalidAuthorId:
      description: Invalid author ID.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            invalidId:
              $ref: '#/components/examples/InvalidUUIDId'
    UnknownAuthor:
      description: No author corresponds to the specified identity.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            unknown:
              $ref: '#/components/examples/UnknownAuthor'
    UnauthorizedError:
      description: Unauthorized error.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            unauthorized:
              $ref: '#/components/examples/UnauthorizedError'
    ForbiddenError:
      description: Forbidden error.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            unauthorized:
              $ref: '#/components/examples/ForbiddenError'
    GeneralError:
      description: General unexpected error.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
          examples:
            general:
              $ref: '#/components/examples/GeneralError'
  headers:
    ContentLanguage:
      schema:
        type: string
      description: |
        The language of the localized resource, ideally corresponding to one of
        those provided in the `Accept-Language` header.

        See [documentation](https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Content-Language)
        for more information about this header.
  schemas:
    Authors:
      type: object
      required:
        - page
        - '_links'
      properties:
        page:
          $ref: '#/components/schemas/Page'
        '_embedded':
          type: object
          readOnly: true
          required:
            - authors
          properties:
            authors:
              description: |
                The authors collection, containing basic information for each
                author.
              type: array
              items:
                $ref: '#/components/schemas/Author'
        '_links':
          type: object
          readOnly: true
          required:
            - self
          properties:
            self:
              description: Link to this authors page.
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://referencing.library.adhuc.org/api/v1/authors?page=1&size=50'
            template:
              description: Link to the template of authors page.
              type: object
              required:
                - href
                - templated
              properties:
                href:
                  type: string
                  example: 'https://referencing.library.adhuc.org/api/v1/authors{?page,size}'
                templated:
                  type: boolean
                  enum:
                    - true
            prev:
              description: Link to the previous authors page.
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://referencing.library.adhuc.org/api/v1/authors?page=0&size=50'
            next:
              description: Link to the next authors page.
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://referencing.library.adhuc.org/api/v1/authors?page=3&size=50'
            first:
              description: Link to the first authors page.
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://referencing.library.adhuc.org/api/v1/authors?page=0&size=50'
            last:
              description: Link to the last authors page.
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  example: 'https://referencing.library.adhuc.org/api/v1/authors?page=8&size=50'
    Author:
      type: object
      required:
        - id
        - name
        - date_of_birth
        - '_links'
      properties:
        id:
          $ref: '#/components/schemas/AuthorId'
        name:
          $ref: '#/components/schemas/AuthorName'
        date_of_birth:
          $ref: '#/components/schemas/DateOfBirth'
        date_of_death:
          $ref: '#/components/schemas/DateOfDeath'
        '_links':
          type: object
          readOnly: true
          required:
            - self
          properties:
            self:
              $ref: '#/components/schemas/AuthorLink'
    AuthorId:
      type: string
      format: uuid
      example: 83b5bf5d-b8bc-4ea7-82dd-51d7bd1af725
    AuthorLink:
      type: object
      description: Link to the author. Can be used to see the detail of the author.
      required:
        - href
      properties:
        href:
          type: string
          example: 'https://referencing.library.adhuc.org/api/v1/authors/83b5bf5d-b8bc-4ea7-82dd-51d7bd1af725'
    AuthorName:
      type: string
      example: Jean-Jacques Rousseau
    DateOfBirth:
      type: string
      format: date
      example: 1712-06-28
    DateOfDeath:
      type: string
      format: date
      example: 1778-07-02
    ReferenceAuthor:
      type: object
      required:
        - name
        - date_of_birth
      properties:
        name:
          $ref: '#/components/schemas/AuthorName'
        date_of_birth:
          $ref: '#/components/schemas/DateOfBirth'
        date_of_death:
          $ref: '#/components/schemas/DateOfDeath'
    Page:
      type: object
      readOnly: true
      required:
        - size
        - total_elements
        - total_pages
        - number
      properties:
        size:
          description: The requested page size. The number of elements in the current page is between 0 and this size.
          type: number
          example: 50
          minimum: 0
        total_elements:
          description: The number of elements in all pages.
          type: number
          example: 443
          minimum: 0
        total_pages:
          description: The number of pages containing all the elements.
          type: number
          example: 9
          minimum: 0
        number:
          description: The current page, starting at 0.
          type: number
          example: 1
          minimum: 0
    Problem:
      type: object
      required:
        - type
        - status
        - title
        - detail
      properties:
        type:
          type: string
          format: uri-reference
          description: The problem type.
        status:
          type: integer
          description: The HTTP status of the response.
        title:
          type: string
          description: A human-readable summary of the problem type.
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        errors:
          type: array
          description: An extension to the problem, providing information about each error.
          items:
            oneOf:
              - type: object
                required:
                  - detail
                  - pointer
                properties:
                  detail:
                    type: string
                    description: The error detail used to determine why the server returned an error.
                  pointer:
                    type: string
                    description: |
                      A JSON pointer (https://datatracker.ietf.org/doc/html/rfc6901) to the associated entity in the request
                      document (e.g. "/" for a primary object, "/name" for a specific attribute named "name").
              - type: object
                required:
                  - detail
                  - parameter
                properties:
                  detail:
                    type: string
                    description: The error detail used to determine why the server returned an error.
                  parameter:
                    type: string
                    description: A string indicating which URI query parameter caused the error.
  examples:
    InvalidPageNumber:
      value:
        type: /problems/invalid-request
        status: 400
        title: Request validation error
        detail: Invalid page number
        errors:
          - detail: 'Numeric instance is lower than the required minimum (minimum: 0, found: -1)'
            parameter: page
      summary: Invalid page number.
    InvalidPageSize:
      value:
        type: /problems/invalid-request
        status: 400
        title: Request validation error
        detail: Invalid page size
        errors:
          - detail: 'Numeric instance is lower than the required minimum (minimum: 1, found: 0)'
            parameter: size
      summary: Invalid page size.
    InvalidAuthorReferencing:
      value:
        type: /problems/invalid-request
        status: 400
        title: Request validation error
        detail: Invalid author referencing command
        errors:
          - detail: 'Empty string'
            parameter: name
    InvalidUUIDId:
      value:
        type: /problems/invalid-request
        status: 400
        title: Request validation error
        detail: Invalid UUID id
        errors:
          - detail: 'Input string "1234" is not a valid UUID'
            parameter: id
      summary: Invalid UUID passed as id in the path.
    UnknownAuthor:
      value:
        type: /problems/unknown-entity
        status: 404
        title: Unknown author
        detail: No author exists with id '96c7774f-dd6b-43d4-bd0e-6a7d1aad09a4'
      summary: Error when no author corresponds to the specified identity.
    UnauthorizedError:
      value:
        type: /problems/unauthorized
        status: 401
        title: Unauthorized access
        detail: Action requires authorization
      summary: Unauthorized access.
    ForbiddenError:
      value:
        type: /problems/forbidden
        status: 403
        title: Forbidden access
        detail: Action requires appropriate access rights
      summary: Forbidden access.
    GeneralError:
      value:
        type: /problems/general-error
        status: 500
        title: General error
        detail: Unexpected error
      summary: Unexpected error.